# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
# 8005793509:AAElxfP9IfkZtPUQb5pWiQ-lEVS2rD_g1S8
# https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg
# 8005793509:AAElxfP9IfkZtPUQb5pWiQ-lEVS2rD_g1S8
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils import executor
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

API_TOKEN = '8067467035:AAGIyUmiwMnYM0O2k2KbQH8XHY6qDvToD2w'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
class EventSliderStates(StatesGroup):
    event_index = State()

# –°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
events = [
    {
        "title": "–•–∞–∫–∞—Ç–æ–Ω 2023",
        "description": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Ö–∞–∫–∞—Ç–æ–Ω—É, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∑–∞ 48 —á–∞—Å–æ–≤!",
        "image": "https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg"
    },
    {
        "title": "–ö—É—Ä—Å –ø–æ Python",
        "description": "–£–∑–Ω–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python –Ω–∞ –Ω–∞—à–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–º –∫—É—Ä—Å–µ.",
        "image": "https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg"
    },
    {
        "title": "–í—ã—Å—Ç–∞–≤–∫–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
        "description": "–ü–æ—Å–µ—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–∫—É, –≥–¥–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
        "image": "https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg"
    }
]

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer_photo(photo='https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg', caption='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!')
    await main_menu(message.chat.id)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def main_menu(chat_id):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["üìù –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìù", "üìö –ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è üìö", "üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π üóì", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã üìû", "üì∞ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è/–ù–æ–≤–æ—Å—Ç–∏ üì∞", "‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùì"]
    keyboard.add(*buttons)
    await bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è/–ù–æ–≤–æ—Å—Ç–∏"
@dp.message_handler(lambda message: message.text == "üì∞ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è/–ù–æ–≤–æ—Å—Ç–∏ üì∞")
async def events_info(message: types.Message):
    await show_event(message.chat.id, 0)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
async def show_event(chat_id, index):
    event = events[index]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if index > 0:
        keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
    if index < len(events) - 1:
        keyboard.add("‚¨ÜÔ∏è –í–ø–µ—Ä–µ–¥ ‚¨ÜÔ∏è")
    keyboard.add("üìî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìî")
    
    await bot.send_photo(chat_id, photo=event["image"], caption=f"{event['title']}\n\n{event['description']}", reply_markup=keyboard)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await EventSliderStates.event_index.set()
    async with dp.current_state(user=chat_id).proxy() as data:
        data['event_index'] = index

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í–ø–µ—Ä–µ–¥"
@dp.message_handler(lambda message: message.text == "‚¨ÜÔ∏è –í–ø–µ—Ä–µ–¥ ‚¨ÜÔ∏è", state=EventSliderStates.event_index)
async def next_event(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        current_index = data.get('event_index', 0)
        if current_index < len(events) - 1:
            await show_event(message.chat.id, current_index + 1)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@dp.message_handler(lambda message: message.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è", state=EventSliderStates.event_index)
async def previous_event(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        current_index = data.get('event_index', 0)
        if current_index > 0:
            await show_event(message.chat.id, current_index - 1)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@dp.message_handler(lambda message: message.text == "üìî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìî", state=EventSliderStates.event_index)
async def back_to_main_menu(message: types.Message, state: FSMContext):
    await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await main_menu(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
@dp.message_handler(lambda message: message.text == "üìù –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìù")
async def general_info(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è", "üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ üë®‚Äçüè´", "üìç –ê–¥—Ä–µ—Å üìç")
    await message.answer("–ó–¥–µ—Å—å –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ù–∞–∑–∞–¥"
@dp.message_handler(lambda message: message.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
async def back_to_main(message: types.Message):
    await main_menu(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"
@dp.message_handler(lambda message: message.text == "üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ üë®‚Äçüè´")
async def teachers_info(message: types.Message):
    await message.answer("–ö–∞—Ä—Ç–æ—á–∫–∞ 1: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å 1\n–§–æ—Ç–æ: https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg")
    await message.answer("–ö–∞—Ä—Ç–æ—á–∫–∞ 2: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å 2\n–§–æ—Ç–æ: https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg")
    await message.answer("–ö–∞—Ä—Ç–æ—á–∫–∞ 3: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å 3\n–§–æ—Ç–æ: https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg")
    await message.answer("–ö–∞—Ä—Ç–æ—á–∫–∞ 4: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å 4\n–§–æ—Ç–æ: https://i.pinimg.com/736x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg")
    await message.answer("–ù–∞–∂–º–∏—Ç–µ '‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ê–¥—Ä–µ—Å"
@dp.message_handler(lambda message: message.text == "üìç –ê–¥—Ä–µ—Å üìç")
async def question1(message: types.Message):
    await message.answer('–£–ª–∏—Ü–∞ –ì–µ–Ω–∫–∏–Ω–æ–π, 84, –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π"
@dp.message_handler(lambda message: message.text == "üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π üóì")
async def schedule_info(message: types.Message):
    await message.answer('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π: https://sun9-62.userapi.com/impg/jaQCOoYD_GmdllQl7dAdMyaCD9eJ_Jbj7lda9Q/URCqZ5riyuI.jpg?size=2560x1810&quality=95&sign=1af4cd70f85ee779066cc3b4d9207753&type=album')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
@dp.message_handler(lambda message: message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã üìû")
async def contacts_info(message: types.Message):
    await message.answer('–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: 89915113881')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è"
@dp.message_handler(lambda message: message.text == "üìö –ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è üìö")
async def send_programs(message: types.Message):
    programs_text = (
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –æ–±—É—á–µ–Ω–∏—è:\n\n"
        "1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é:\n"
        "   - –í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
        "   - –û—Å–Ω–æ–≤—ã Python: —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö\n"
        "   - –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ —Ü–∏–∫–ª—ã\n"
        "   - –§—É–Ω–∫—Ü–∏–∏ –∏ –º–æ–¥—É–ª–∏\n"
        "   - –û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏\n"
        "   - –ü—Ä–æ–µ–∫—Ç: —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n"
        "2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–µ:\n"
        "   - –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫—É\n"
        "   - –û—Å–Ω–æ–≤—ã –º–µ—Ö–∞–Ω–∏–∫–∏ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏\n"
        "   - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤\n"
        "   - –°–±–æ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–±–æ—Ç–∞\n"
        "   - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏–π –∏ —Å–µ–Ω—Å–æ—Ä–æ–≤\n"
        "   - –ü—Ä–æ–µ–∫—Ç: —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞\n\n"
        "3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ LEGO WeDo:\n"
        "   - –í–≤–µ–¥–µ–Ω–∏–µ –≤ LEGO WeDo\n"
        "   - –û—Å–Ω–æ–≤—ã —Å–±–æ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π\n"
        "   - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é LEGO WeDo Software\n"
        "   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—á–∏–∫–æ–≤ –∏ –º–æ—Ç–æ—Ä–æ–≤\n"
        "   - –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
        "   - –ü—Ä–æ–µ–∫—Ç: —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º\n"
    )
    await message.answer(programs_text)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
@dp.message_handler(lambda message: message.text == "‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùì")
async def faq(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è", "‚ùì –ú–æ–∂–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –µ—Å–ª–∏ –º–Ω–µ –Ω–µ—Ç 14? ‚ùì", "‚ùì –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∑–∞–Ω—è—Ç–∏—è –Ω–∞ IT-CUBE? ‚ùì", "‚ùì –ß—Ç–æ —Ç–∞–∫–æ–µ IT-CUBE? ‚ùì")
    await message.answer('–ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.', reply_markup=keyboard)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –µ—Å–ª–∏ –º–Ω–µ –Ω–µ—Ç 14?"
@dp.message_handler(lambda message: message.text == "‚ùì –ú–æ–∂–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –µ—Å–ª–∏ –º–Ω–µ –Ω–µ—Ç 14? ‚ùì")
async def question1(message: types.Message):
    await message.answer('IT-CUBE –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏–π –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –æ—Ç 6 –¥–æ 18 –ª–µ—Ç.')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∑–∞–Ω—è—Ç–∏—è –Ω–∞ IT-CUBE?"
@dp.message_handler(lambda message: message.text == "‚ùì –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∑–∞–Ω—è—Ç–∏—è –Ω–∞ IT-CUBE? ‚ùì")
async def question2(message: types.Message):
    await message.answer('–í—Å—ë –æ–±—É—á–µ–Ω–∏–µ –≤ –Ω–∞—à–µ–º —Ü–µ–Ω—Ç—Ä–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ë–ï–°–ü–õ–ê–¢–ù–û.')
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ß—Ç–æ —Ç–∞–∫–æ–µ IT-CUBE?"
@dp.message_handler(lambda message: message.text == "‚ùì –ß—Ç–æ —Ç–∞–∫–æ–µ IT-CUBE? ‚ùì")
async def question3(message: types.Message):
    await message.answer('¬´IT-CUBE¬ª ‚Äî —ç—Ç–æ —Ü–µ–Ω—Ç—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–µ—Ç–µ–π –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –Ω–∞ —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –æ—Å–≤–æ–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π, –Ω–∞–≤—ã–∫–æ–≤ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –≤ —Å—Ñ–µ—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)